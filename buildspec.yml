version: 0.2

phases:
  install:
    runtime-versions:
      python: "3.11"
      nodejs: "20"
    commands:
      - export PATH=$HOME/.local/bin:$PATH
      - |
        [ -n "$(which poetry)" ] || \
        (curl -sSL https://install.python-poetry.org | python3 - && poetry self add poetry-plugin-lambda-build)
      - |
        [ -n "$(which terraform)" ] || \
        (curl -sSL https://releases.hashicorp.com/terraform/1.9.5/terraform_1.9.5_linux_amd64.zip -o /tmp/terraform.zip && unzip /tmp/terraform.zip -d $HOME/.local/bin)
  pre_build:
    commands:
      - cd ${CODEBUILD_SRC_DIR}/frontend && npm install --no-progress
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry install
      - |
        cd ${CODEBUILD_SRC_DIR}/terraform && echo -e "terraform {\n  backend \"s3\" {}\n}" > _override.tf && \
        terraform init \
          -backend-config="bucket=${S3_BUCKET_TFSTATE}" \
          -backend-config="key=${S3_KEY_TFSTATE}" \
          -backend-config="region=${AWS_REGION}"
  build:
    commands:
      - cd ${CODEBUILD_SRC_DIR}/frontend && npm run check-format
      - cd ${CODEBUILD_SRC_DIR}/frontend && npm run lint
      # - cd ${CODEBUILD_SRC_DIR}/frontend && npm run test
      - cd ${CODEBUILD_SRC_DIR}/frontend && npm run build
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry run black --check .
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry run isort --check .
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry run flake8
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry run mypy .
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry run python -m unittest && poetry build-lambda
  post_build:
    commands:
      - cd ${CODEBUILD_SRC_DIR}/terraform && terraform apply -input=false -auto-approve

artifacts:
  files:
    - "**/*"

cache:
  paths:
    - /root/.local/**/*
    - /root/.cache/pip/**/*
    - terraform/.terraform/**/*
