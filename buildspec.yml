version: 0.2

phases:
  install:
    on-failure: ABORT
    runtime-versions:
      python: "3.11"
      nodejs: "20"
    commands:
      - export PATH=$HOME/.local/bin:$PATH
      - mkdir -p $HOME/.cache/downloads
      - |
        [ -n "$(which poetry)" ] || \
        (curl -sSL https://install.python-poetry.org | python3 - && poetry self add poetry-plugin-lambda-build)
      - |
        [ -n "$(which terraform)" ] || \
        (([ -e $HOME/.cache/downloads/terraform.zip ] || curl -sSL https://releases.hashicorp.com/terraform/1.9.5/terraform_1.9.5_linux_amd64.zip -o $HOME/.cache/downloads/terraform.zip) && unzip $HOME/.cache/downloads/terraform.zip -d $HOME/.local/bin)
      - |
        ([ -e $HOME/.cache/downloads/google-chrome-stable_current_x86_64.rpm ] || curl https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm -o $HOME/.cache/downloads/google-chrome-stable_current_x86_64.rpm) && yum install -y $HOME/.cache/downloads/google-chrome-stable_current_x86_64.rpm
      - |
        [ -n "$(which gauge)" ] || \
        (([ -e $HOME/.cache/downloads/gauge.zip ] || curl -sSL https://github.com/getgauge/gauge/releases/download/v1.6.8/gauge-1.6.8-linux.x86_64.zip -o $HOME/.cache/downloads/gauge.zip) && unzip $HOME/.cache/downloads/gauge.zip -d $HOME/.local/bin)
  pre_build:
    on-failure: ABORT
    commands:
      - cd ${CODEBUILD_SRC_DIR}/frontend && npm install --no-progress
      - cd ${CODEBUILD_SRC_DIR}/bff/auth && poetry install
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry install
      - |
        cd ${CODEBUILD_SRC_DIR}/terraform && echo -e "terraform {\n  backend \"s3\" {}\n}" > _override.tf && \
        terraform init \
          -backend-config="bucket=${S3_BUCKET_TFSTATE}" \
          -backend-config="key=${S3_KEY_TFSTATE}" \
          -backend-config="region=${AWS_REGION}"
      - cd ${CODEBUILD_SRC_DIR}/gauge && npm install --no-progress && gauge install && gauge config check_updates false
      - cd ${CODEBUILD_SRC_DIR}/gauge && npm install --no-progress
  build:
    on-failure: ABORT
    commands:
      - cd ${CODEBUILD_SRC_DIR}/frontend && npm run check-format
      - cd ${CODEBUILD_SRC_DIR}/frontend && npm run lint
      # - cd ${CODEBUILD_SRC_DIR}/frontend && npm run test
      - cd ${CODEBUILD_SRC_DIR}/frontend && npm run build
      - cd ${CODEBUILD_SRC_DIR}/bff/auth && poetry run black --check .
      - cd ${CODEBUILD_SRC_DIR}/bff/auth && poetry run isort --check .
      - cd ${CODEBUILD_SRC_DIR}/bff/auth && poetry run flake8
      - cd ${CODEBUILD_SRC_DIR}/bff/auth && poetry run mypy .
      - cd ${CODEBUILD_SRC_DIR}/bff/auth && poetry run pytest --junitxml=unittests.xml --cov-report=xml:coverage.xml --cov=./auth
      - cd ${CODEBUILD_SRC_DIR}/bff/auth && poetry build-lambda
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry run black --check .
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry run isort --check .
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry run flake8
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry run mypy .
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry run pytest --junitxml=unittests.xml --cov-report=xml:coverage.xml --cov=./hello
      - cd ${CODEBUILD_SRC_DIR}/api/hello && poetry build-lambda
      - cd ${CODEBUILD_SRC_DIR}/terraform && terraform apply -input=false -auto-approve
      - export SA_FRONTEND_URL=$(cd ${CODEBUILD_SRC_DIR}/terraform && terraform output frontend_domain_name | tr -d '"')
      - cd ${CODEBUILD_SRC_DIR}/gauge && TAIKO_BROWSER_ARGS=--no-sandbox,--start-maximized,--disable-dev-shm-usage npm run test
  post_build:
    on-failure: ABORT
    commands:
      - echo "Post build"

reports:
  python-unit-tests:
    files:
      - bff/auth/unittests.xml
      - api/hello/unittests.xml
    file-format: JUNITXML
  python-coverage-tests:
    files:
      - bff/auth/coverage.xml
      - api/hello/coverage.xml
    file-format: COBERTURAXML
  gauge-tests:
    files:
      - gauge/reports/xml-report/result.xml
    file-format: JUNITXML

artifacts:
  files:
    - "**/*"

cache:
  paths:
    - /root/.local/**/*
    - /root/.cache/pip/**/*
    - /root/.cache/downloads/**/*
    - terraform/.terraform/**/*
